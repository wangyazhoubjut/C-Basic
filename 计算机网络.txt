tcpip协议栈：

反复记忆 
1：协议体系 分层  封装计算机内部 计算机内核态 应用层为主 
2：链路层：以太网帧 MTU  ARP  RARP机制   
3：网络层 IP协议  首部格式 IP分片 如何避免分片 IP理由表 ICMP协议 查询+差错
4：传输层 udp tcp 首部 TCP连接控制  TCP流量控制机制  TCP超时重传
5：DNS  FTP HTTP  请求头 响应头  各种状态码  https 摘要


计算机网络应用 重新开始

网络排错：从底层往上层排查  网线->ip->应用程序

应用层数据  分成段 编上号（运输层）  加上目的ip（网络层） 加上源mac与目的mac（数据链路层）  到比特流物理层 掐头去尾  最高看到网络层 


物理层：比特流  机械特性  数据：运送消息的实体
        单向通信：只能一个方向通信
		半双工：不能同时接收
		全双工：同时接收、发送
比特流  调制解调 
频分复用 波形叠加
时分复用 
码分复用 

数据链路层：要解决三个基本问题

1：封装成帧 字节填充 添加转义字符  帧 装的是IP数据包且不超过1500字节
2：透明传输 添加校验字符
3  差错控制CRC 后面补3个0  除数是四位数  余数算出来补到3个0的位置，判断失败直接扔掉

  数据链路层不负责可靠传输 不重传 看除数位数了 除数大 本身机制出错概率小

  协议：PPP    P30

  抓包工具查看：Frame IP  TCP层 TCP SegmentData

网络层：（1）虚电路  （2）数据报

     目前互联网的服务为传输层提供数据报服务

IP协议：网关 教室的门  网段的第一个地址或者最后一个地址

数据包给到路由器 转来转去 直接交付  ARP协议  ICMP协议
默认C类地址   127.0.0.1
公网地址 /私网地址：10.0.0.0 -192.168.255.0

子网划分

数据包里面含有 源IP 目的IP  决定了最终去哪里
数据帧里面  源MAC 目的MAC地址  决定了下一跳去哪里 不断替换源MAC和目的MAC

ARP协议：广播 IP转MAC  ARP欺骗  P2P终结者 网络执法官  ARP防火墙
 

 IP数据报  首部+数据部分
 首部细分：版本，区分服务  哪些包优先
           IP数据包分片   3800  1500MTU 把1个包非为3个包 
		   生存时间 TTL 如果不设置 来回转 永远达不到目的地
		   协议号 ICMP  IGMP TCP  UDP  首部校验和只是检查是不是衣服或者光盘
		   源地址和目的地址
抓包工具查看IP首部：

转发分组流程：需要能去能回 
    数据路由：路由器在不同网段转发数据包  跨网段通信
	网络畅通条件：沿途的路由器必须知道到目标网络下一跳到哪个接口
	5个网段 需要告诉沿途路由器 需要往路由器添加路由表 静态路由
	                                网段

							show ip route  
	来来来 我告诉你怎么走  ip route 192.168.0.0  255.255.255.0 via地址

	删除路由表

	windows下的默认网关和路由表
	route add  mask 加路由表  计算机上最好只有一个网关


	ICMP协议：差错报告报文和询问报文
	抓包：ping  pathping

	动态路由协议： 

	RIP协议  周期性广播 我连了哪个网段  需要过几个路由器 最佳路径 
	带宽一样 跳数越小 才是最佳协议
	OSPF协议 开放式

	网络地址转换技术：

	端口映射：  外网可以访问内网的一个服务器

	传输层： 应用场景
	TCP：确保数据完整性 分段 编号 流量控制 建立会话 netstat -n
	UDP：一个数据包就能完成数据通信 不建立会话 用于多播

	http=TCP+80
	https 443
	ftp 21   用IP来定位计算机  用端口区分服务

	windows防火墙的作用 端口都关了 ping不通 拦截进来的流量 
	网络安全 只开服务端口  
	木马程序 服务器被黑  传输层

	
	UDP  报文  没有编号 有校验和
	TCP  段 提供可靠交付 流量控制功能 滑动窗口  超时重传 提供全双工 面向字节流
	传文件的话  一个包不能丢啊  


	1：如何实现可靠传输？
	   
	   停止等待协议 确认机制  信道利用率较低 ->发送方连续发送多个分组哈。

	   滑动窗口： 发送窗口 数字为5吧老铁

	   123456789 10  11 12  连续发1-5 然后等确认啊 收到了一个确认 滑动窗口右移

	   接收计算机 累积确认 之前连续的啊我发给你确认号 

	   超时重传机制 等一个往返时间 继续发一遍啊 咋没动静呢 丢失确认我不收了
	   自动重传请求
	   
	   其实真实的情况是这样的
	   1:以字节为单位的滑动窗口技术 在缓存里面进行的 收掉的缓存里面丢弃 滑动窗口右移
	      中间丢包的话 确认号发7 选择性确认 后面有部分数据我其实收到了发送方不必发了
		 超时重传时间怎么选择？ TCP每发送一个报文段 对报文段设置一次计时器。
		   
	2：如何实现流量控制？

	   针对AB两个点  协商窗口大小
	3：如何避免网络拥塞？

	   面向整个网络，丢包的话 计算机主动把发包速度降下来  涉及到所有主机和路由器

	   慢开始  拥塞避免算法 指数级增长  到达慢开始门限的时候  阈值变为+1 +1的操作
	   快重传





	TCP报文段数据格式


TCP首部格式：20个字节固定的+可变长度  一行四个字节 总共5行
源端口 +目标端口 总共四个字节
序号：四个字节 指的是传送报文段 数据段的第一个字节占整个文件的字节数
确认号：四个字节  让发送者下一次发送的数据包是哪一个了
数据偏移：4个字节  选项最多40个字节 
URG 标志优先位 SYN=1 建立会话请求包 ACK=0
web站点同意建立 ACK=1 SYN=1 序号为0
xp-》web  ACK=1  SYN=0  

SYN攻击
频繁建立会话 源地址瞎编的  我xp等不到不回应 占用我的资源很多 攻击xp 
缺德鬼 land攻击 目标地址和源地址都是xp的 
 FIN
 窗口 占用包两个字节 接收缓存和发送缓存大小


抓包工具：练习 确认号序号 

https://www.cnblogs.com/mq0036/p/11187138.html

(tcp port 80) and ((dst host 192.168.0.2) or (dst host 192.168.0.3)) //捕获过滤 
tcp.port==80&&(ip.dst==192.168.0.2||ip.dst==192.168.0.3) //显示过滤



一个字符一个字节8bit  图片的话是二进制 八个二进制当一个字节
传的话会放到TCP缓存中，接收方也有一个接收缓存

构造成数据包 加上地址  接收端接到数据 将头去掉 组合起来 应用程序
从缓存里面读数据 不在乎你之前杂组的包过来的  面向字节流
IP+端口号 构成套接字


TCP传输连接管理：
  SYN-sent 建立请求数据包 持续
   SYN-Receive 额可以看到瞎编乱造的ip地址 SYN攻击  
	Establish状态  closeWAIT状态
  
  TCP连接释放 通信双方都可以释放连接
  FINWAIT  FINWAIT2 状态 TIMEWAIT状态 Closed状态


  应用层协议:

  DNS服务：QQ设置 负责解析域名 将域名解析为IP地址
  域名解析过程：








